"""
Django settings for meetingmind project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from django.core.management.utils import get_random_secret_key
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env files
# Priority: .env.development > .env
if os.path.exists(BASE_DIR / '.env.development'):
    load_dotenv(BASE_DIR / '.env.development')
elif os.path.exists(BASE_DIR / '.env'):
    load_dotenv(BASE_DIR / '.env')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
# Default to True for development if .env.development exists
DEBUG = os.environ.get('DEBUG', 'true' if os.path.exists(BASE_DIR / '.env.development') else 'false').lower() == 'true'

ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '').split(',') if os.environ.get('ALLOWED_HOSTS') else ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'meetingmind.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'meetingmind.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Database configuration with dev/prod separation
if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ.get('DB_NAME', 'tm_intellimind_db'),
            'USER': os.environ.get('DB_USER', 'postgres'),
            'PASSWORD': os.environ.get('DB_PASSWORD', 'postgres'),
            'HOST': os.environ.get('DB_HOST', 'localhost'),
            'PORT': os.environ.get('DB_PORT', '5432'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Bangkok'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles' if not DEBUG else None

# Media files (uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 100MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 100MB

# Audio processing settings
AUDIO_CHUNK_THRESHOLD = int(os.getenv('AUDIO_CHUNK_THRESHOLD', 2 * 1024 * 1024))  # 2MB - files larger than this get chunked (enables progressive transcription)
AUDIO_CHUNK_DURATION = float(os.getenv('AUDIO_CHUNK_DURATION', 60.0))  # 60 seconds per chunk (optimal for Whisper processing)
AUDIO_OVERLAP_DURATION = float(os.getenv('AUDIO_OVERLAP_DURATION', 3.0))  # 3 seconds overlap between chunks (minimizes transcription gaps)
AUDIO_MAX_CHUNK_DURATION = float(os.getenv('AUDIO_MAX_CHUNK_DURATION', 90.0))  # Maximum chunk length
AUDIO_MIN_CHUNK_DURATION = float(os.getenv('AUDIO_MIN_CHUNK_DURATION', 15.0))  # Minimum chunk length

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.server': {
            'handlers': ['console'],
            'level': 'WARNING',  # Reduce HTTP request noise
            'propagate': False,
        },
        'core': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Create logs directory if it doesn't exist
os.makedirs(BASE_DIR / 'logs', exist_ok=True)

# LLM Configuration
LLM_API_BASE = os.environ.get('LLM_API_BASE', 'http://localhost:1234/v1')
LLM_API_KEY = os.environ.get('LLM_API_KEY', 'not-needed')
LLM_TIMEOUT = int(os.environ.get('LLM_TIMEOUT', '300'))

# Security settings for production
if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True

# Whisper Configuration - Optimized for Apple Silicon M4
WHISPER_DEVICE = 'auto'  # 'auto', 'cpu', 'cuda' - auto-detects M4 and optimizes accordingly
WHISPER_COMPUTE_TYPE = 'int8'  # 'int8', 'int16', 'float16', 'float32' - int8 optimal for M4
WHISPER_MODELS_DIR = None  # None for default, or path to custom models directory
WHISPER_PRELOAD_MODELS = ['medium', 'large-v2']  # Optimized models for enhanced performance
WHISPER_DEFAULT_MODEL = 'large-v2'  # Upgraded to large-v2 for enhanced Thai accuracy
WHISPER_SUPPORTED_LANGUAGES = ['en', 'th', 'auto']  # Supported languages
WHISPER_THAI_OPTIMIZED = True  # Enable Thai language optimizations

# M4 and Batching Optimizations (New)
WHISPER_USE_BATCHING = True  # Enable VAD batching for speed improvements
WHISPER_ENABLE_M4_OPTIMIZATIONS = True  # Enable Apple Silicon specific optimizations
WHISPER_MEMORY_MONITORING = True  # Enable memory usage monitoring for M4
WHISPER_AUTO_MEMORY_CLEANUP = True  # Automatically clear cache when memory is low

# Enhanced Language-specific Whisper settings - Compatible with faster-whisper 1.1.1
WHISPER_LANGUAGE_SETTINGS = {
    'th': {
        'beam_size': 10,
        'temperature': 0.1,
        'initial_prompt': "สวัสดีครับ นี่คือการประชุมทางธุรกิจ ประกันไม่ใช่ชีวิต โตเกียวมารีน",  # Enhanced Thai business prompt
        'condition_on_previous_text': False,
        # Advanced parameters for v1.1.1+
        'patience': 1.0,
        'length_penalty': 1.0,
        'repetition_penalty': 1.0,
        'no_repeat_ngram_size': 0,
        'suppress_blank': True,
        'word_timestamps': True,
        'compression_ratio_threshold': 2.4,
        'logprob_threshold': -1.0,
        'no_speech_threshold': 0.6,
        'best_of': 5,
        'prepend_punctuations': "\"'([{-",
        'append_punctuations': "\"'.。,，!！?？:：\")]}",
    },
    'en': {
        'beam_size': 5,
        'temperature': 0.0,
        'initial_prompt': "Hello, this is a business meeting about insurance and financial services.",
        'condition_on_previous_text': False,
        # Advanced parameters for v1.1.1+
        'patience': 1.0,
        'length_penalty': 1.0,
        'repetition_penalty': 1.0,
        'suppress_blank': True,
        'word_timestamps': True,
        'compression_ratio_threshold': 2.4,
        'logprob_threshold': -1.0,
        'no_speech_threshold': 0.6,
        'best_of': 5,
    },
    'auto': {
        'beam_size': 5,
        'temperature': 0.0,
        'condition_on_previous_text': False,
        'patience': 1.0,
        'suppress_blank': True,
        'word_timestamps': True,
        'compression_ratio_threshold': 2.4,
        'logprob_threshold': -1.0,
        'no_speech_threshold': 0.6,
    }
}

# Enhanced Thai Language Enhancements
THAI_BUSINESS_VOCABULARY = [
    "บริษัท", "ประชุม", "โครงการ", "ขาย", "การตลาด", "ลูกค้า", "บริการ", 
    "แผนงาน", "งบประมาณ", "กำไร", "รายได้", "ต้นทุน", "ประกันภัย",
    "ประกันชีวิต", "ประกันไม่ใช่ชีวิต", "โตเกียวมารีน", "TM Group",
    "ความเสี่ยง", "การจัดการ", "นโยบาย", "สินไหม", "เบี้ยประกัน", "อัตราเบี้ย",
    "การประเมิน", "วิเคราะห์", "ตลาด", "แผนยุทธศาสตร์", "เป้าหมาย", "ผลงาน",
    "คุณภาพ", "มาตรฐาน", "ระบบ", "ข้อมูล", "รายงาน", "สถิติ"
]

THAI_NORMALIZATION_RULES = {
    # Common Thai business terms normalization
    "บจก.": "บริษัทจำกัด",
    "มหาชน": "มหาชนจำกัด", 
    "สำนักงาน": "สำนักงาน",
    "ผจก.": "ผู้จัดการ",
    "กรรมการ": "กรรมการ"
}
